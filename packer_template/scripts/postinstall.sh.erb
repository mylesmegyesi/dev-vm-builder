
echo "setup sudo to allow no-password sudo for 'admin'"
groupadd -r admin
usermod -a -G admin <%= @vm_config.admin_username %>
cp /etc/sudoers /etc/sudoers.orig
sed -i -e '/Defaults\s\+env_reset/a Defaults\texempt_group=admin' /etc/sudoers
sed -i -e '/Defaults\s\+env_reset/a Defaults\tenv_keep+=SSH_AUTH_SOCK' /etc/sudoers
sed -i -e '/Defaults\s\+env_reset/a Defaults\tenv_keep+=PATH' /etc/sudoers
sed -i -e 's/%admin ALL=(ALL) ALL/%admin ALL=NOPASSWD:ALL/g' /etc/sudoers

apt-get -y update
apt-get -y upgrade
apt-get -y install linux-headers-$(uname -r) build-essential

if test -f .vbox_version ; then
  echo "installing VirtualBox Guest Additions..."
  apt-get -y install dkms
  mount -o loop <%= @vm_config.home %>/VBoxGuestAdditions.iso /mnt
  sh /mnt/VBoxLinuxAdditions.run
  umount /mnt
  rm VBoxGuestAdditions.iso
else
  echo "installing VMWare Tools..."
  mkdir /mnt/vmware-tools
  mount -o loop <%= @vm_config.home %>/VMWareTools.iso /mnt/vmware-tools
  tar xzvf /mnt/vmware-tools/VMwareTools-*.tar.gz -C /tmp/
  /tmp/vmware-tools-distrib/vmware-install.pl -d
  umount /mnt/vmware-tools
  rm VMWareTools.iso
  rmdir /mnt/vmware-tools
  /usr/bin/vmware-config-tools.pl -d
fi

# Install system Ruby
apt-get -y install ruby1.9.1 ruby1.9.1-dev

# Remove the downloaded .deb files
apt-get clean

echo "Installing Chef"
gem install chef --version '11.6.0' --no-ri --no-rdoc

mkdir <%= @vm_config.home %>/.ssh
chmod 700 <%= @vm_config.home %>/.ssh
cd <%= @vm_config.home %>/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
chmod 600 <%= @vm_config.home %>/.ssh/authorized_keys
chown -R <%= @vm_config.admin_username %> <%= @vm_config.home %>/.ssh

# Remove items used for building, since they aren't needed anymore
apt-get -y remove linux-headers-$(uname -r)
apt-get -y autoremove

# Removing leftover leases and persistent rules
echo "cleaning up dhcp leases"
rm /var/lib/dhcp/*

# Make sure Udev doesn't block our network
# http://6.ptmc.org/?p=164
echo "cleaning up udev rules"
rm /etc/udev/rules.d/70-persistent-net.rules
mkdir /etc/udev/rules.d/70-persistent-net.rules
rm -rf /dev/.udev/
rm /lib/udev/rules.d/75-persistent-net-generator.rules

echo "Adding a 2 sec delay to the interface up, to make the dhclient happy"
echo "pre-up sleep 2" >> /etc/network/interfaces

# Zero out the free space to save space in the final image:
echo "Zeroing device to make space..."
dd if=/dev/zero of=/EMPTY bs=1M
rm -f /EMPTY

sed -i 's/set timeout.*$/set timeout=10/' /etc/grub.d/00_header
update-grub

exit
